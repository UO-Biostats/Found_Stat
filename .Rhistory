mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=20, y=10, labels = mylabelA1, cex=0.7)
text(x=20, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=2, y=4, labels = mylabelA1, cex=0.7)
text(x=2, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10, y=2, labels = mylabelA2, cex=0.7)
#set.seed(188)
set.seed(61)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=2, y=10, labels = mylabelA1, cex=0.7)
text(x=2, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=20, y=10, labels = mylabelA1, cex=0.7)
text(x=20, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=2, y=4, labels = mylabelA1, cex=0.7)
text(x=2, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10, y=2, labels = mylabelA2, cex=0.7)
#set.seed(188)
set.seed(134)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=2, y=10, labels = mylabelA1, cex=0.7)
text(x=2, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=20, y=10, labels = mylabelA1, cex=0.7)
text(x=20, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=2, y=4, labels = mylabelA1, cex=0.7)
text(x=2, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10, y=2, labels = mylabelA2, cex=0.7)
#set.seed(188)
set.seed(145)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=2, y=10, labels = mylabelA1, cex=0.7)
text(x=2, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=20, y=10, labels = mylabelA1, cex=0.7)
text(x=20, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=2, y=4, labels = mylabelA1, cex=0.7)
text(x=2, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10, y=2, labels = mylabelA2, cex=0.7)
#set.seed(188)
set.seed(188)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=2, y=10, labels = mylabelA1, cex=0.7)
text(x=2, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=20, y=10, labels = mylabelA1, cex=0.7)
text(x=20, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=2, y=4, labels = mylabelA1, cex=0.7)
text(x=2, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10, y=2, labels = mylabelA2, cex=0.7)
set.seed(188)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=1, y=10, labels = mylabelA1, cex=0.7)
text(x=1, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=10, y=10, labels = mylabelA1, cex=0.7)
text(x=10, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=1, y=4, labels = mylabelA1, cex=0.7)
text(x=1, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=1, y=3.6, labels = mylabelA1, cex=0.7)
text(x=1, y=2, labels = mylabelA2, cex=0.7)
set.seed(188)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=1.1, y=10, labels = mylabelA1, cex=0.7)
text(x=1.1, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=11, y=10, labels = mylabelA1, cex=0.7)
text(x=11, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=1.1, y=4, labels = mylabelA1, cex=0.7)
text(x=1.1, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=11.1, y=3.6, labels = mylabelA1, cex=0.7)
text(x=11.1, y=2, labels = mylabelA2, cex=0.7)
set.seed(188)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=1.2, y=10, labels = mylabelA1, cex=0.7)
text(x=1.2, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=12, y=10, labels = mylabelA1, cex=0.7)
text(x=12, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=1.2, y=4, labels = mylabelA1, cex=0.7)
text(x=1.2, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10.1, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10.1, y=2, labels = mylabelA2, cex=0.7)
set.seed(188)
x_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
y_1 <- seq(2,10,0.2)+rnorm(41, 0, 1)
x_2 <- sort(x_1, decreasing=TRUE)
y_2 <- sort(y_1)
x_3 <- sample(x_1)
y_3 <- sample(y_1)
cov_A <- cov(x_1,y_1)
cor_A <- cor(x_1,y_1)
cov_B <- cov(x_1*10,y_1)
cor_B <- cor(x_1*10,y_1)
cov_C <- cov(x_2,y_2)
cor_C <- cor(x_2,y_2)
cov_D <- cov(x_3,y_3)
cor_D <- cor(x_3,y_3)
par(mfrow=c(2,2))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=1.5, y=10, labels = mylabelA1, cex=0.7)
text(x=1.5, y=8, labels = mylabelA2, cex=0.7)
plot(x_1*10, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="B")
mylabelA1 <- bquote(italic(cov) == .(format(cov_B, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_B, digits = 2)))
text(x=15, y=10, labels = mylabelA1, cex=0.7)
text(x=15, y=8, labels = mylabelA2, cex=0.7)
plot(x_2, y_2, cex=0.7, pch=19, ylab="y", xlab="x", main="C")
mylabelA1 <- bquote(italic(cov) == .(format(cov_C, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_C, digits = 2)))
text(x=1.5, y=4, labels = mylabelA1, cex=0.7)
text(x=1.5, y=2, labels = mylabelA2, cex=0.7)
plot(x_3, y_3, cex=0.7, pch=19, ylab="y", xlab="x", main="D")
mylabelA1 <- bquote(italic(cov) == .(format(cov_D, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_D, digits = 2)))
text(x=10.5, y=3.6, labels = mylabelA1, cex=0.7)
text(x=10.5, y=2, labels = mylabelA2, cex=0.7)
lm(x_1, y_1)
summary(lm(x_1, y_1))
lm(y_1~x_1)
summary(lm(y_1~x_1))
plot(lm(y_1~x_1))
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=1.5, y=10, labels = mylabelA1, cex=0.7)
text(x=1.5, y=8, labels = mylabelA2, cex=0.7)
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x", main="A")
mylabelA1 <- bquote(italic(cov) == .(format(cov_A, digits = 2)))
mylabelA2 <- bquote(italic(cor) == .(format(cor_A, digits = 2)))
text(x=1.5, y=10, labels = mylabelA1, cex=0.7)
text(x=1.5, y=8, labels = mylabelA2, cex=0.7)
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x")
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x")
plot(lm(y_1~x_1))
plot(lm(y_1~x_1))$1
plot(lm(y_1~x_1))[1]
class(lm(y_1~x_1))
str(lm(y_1~x_1))
## First, plot the relationship with a scatter plot
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x")
## Define the model using the lm() function and assign it to the object "reg_mod_1"
reg_mod_1 <- lm(y_1 ~ x_1)
## We can make a residual plot to help evaluate assumptions
plot(reg_mod_1$fitted.values, reg_mod_1$residuals)
## We can use the summary() function to look at parameter estimates and hypothesis tests
summary(reg_mod_1)
## First, plot the relationship with a scatter plot
plot(x_1, y_1, cex=0.7, pch=19, ylab="y", xlab="x")
## Define the model using the lm() function and assign it to the object "reg_mod_1"
reg_mod_1 <- lm(y_1 ~ x_1)
## We can make a residual plot to help evaluate assumptions
plot(reg_mod_1$fitted.values, reg_mod_1$residuals)
## We can use the summary() function to look at parameter estimates and hypothesis tests
summary(reg_mod_1)
5<!3
5<=3
iris
boxplot(iris$Sepal.Length~iris$Sepal.Length)
boxplot(iris$Sepal.Length~iris$Species)
stripchart(iris$Sepal.Length~iris$Species, vertical=T, method="jitter",
ylab="sepal length", xlab="species", pch=19)
stripchart(iris$Sepal.Length~iris$Species, vertical=T, method="jitter",
ylab="sepal length", xlab="species", pch=19, cex=0.5)
iris_lm <- lm(iris$Sepal.Length ~ iris$Species)
summary(iris_lm)
5.0060+0.9300
5.0060+1.5820
iris_aov <- aov(iris$Sepal.Length ~ iris$Species)
anova(iris_aov)
library(multcomp)
summary(glht(iris_aov, linfct=mcp(iris$Species="Tukey")))
summary(glht(iris_aov, linfct = mcp(iris$Species = "Tukey")))
summary(glht(iris_aov, linfct = mcp(Species = "Tukey")))
iris_lm <- lm(Sepal.Length ~ Species, iris)
summary(iris_lm)
iris_aov <- aov(Sepal.Length ~ Species, iris)
anova(iris_aov)
summary(glht(iris_aov, linfct = mcp(Species = "Tukey")))
cars
mtcars
plot(mtcars$mpg~mtcars$vs*mtcars$am)
boxplot(mtcars$mpg~mtcars$vs*mtcars$am)
interaction.plot(x.factor=mtcars$am, trace.factor=mtcars$vs, response=mtcars$mpg)
with(mtcars,{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg)
})
with(mtcars,{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg,)
})
with(mtcars,{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission")
})
class(mtcars$vs)
with(mtcars,{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl config")
})
with(mtcars,{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl\nconfig")
})
mtcars
mtcars_mod <- mtcars
mtcars_mod$vs <- as.factor(ifelse(mtcars$vs==0, "V","straight"))
mtcars_mod$am <- as.factor(ifelse(mtcars$am==0, "auto","manual"))
with(mtcars_mod{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl\nconfig")
})
mtcars_mod
mtcars_mod$am
with(mtcars_mod{
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl\nconfig")
})
with(mtcars_mod, {
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl\nconfig")
})
with(mtcars_mod, {
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl config")
})
## First, modify the vs and am factor levels to be more descriptive
mtcars_mod <- mtcars
mtcars_mod$vs <- as.factor(ifelse(mtcars$vs==0, "V","straight"))
mtcars_mod$am <- as.factor(ifelse(mtcars$am==0, "auto","manual"))
## Make an interaction plot
with(mtcars_mod, {
interaction.plot(x.factor=am, trace.factor=vs, response=mpg, xlab="transmission",
trace.label="cyl config")
})
mpg_fac1 <- aov(mpg ~ vs + am + vs:am)
mpg_fac1 <- aov(mpg ~ vs + am + vs:am, mtcars_mod)
mpg_fac2 <- aov(mpg ~ vs*am, mtcars_mod)
anova(mpg_fac1)
anova(mpg_fac2)
summary(mpg_fac1)
factor("A","B","C")
factor(c("A","B","C")
)
factor(c("A","C","B"))
gl(4,1,4, c("yellow_smooth","yellow_dent","green_smooth","green_dent"))
pea_count <- c(160, 39, 51, 8)
pea_type <- gl(4,1,4, c("yellow_smooth","yellow_dent","green_smooth","green_dent"))
pea_data <- data.frame(pea_type, pea_count)
pea_data
xtabs(pea_count ~ pea_type, data=pea_data)
pea_table <- xtabs(pea_count ~ pea_type, data=pea_data)
chisq.test(pea_table, p=c(9/16, 3/16, 3/16, 1/16), correct=F)$exp
chisq.test(pea_table, p=c(9/16, 3/16, 3/16, 1/16), correct=F)
pea_count <- c(160, 39, 48, 11)
## Next, we create a vector of factor levels that name the 4 different categories, using the `gl()` function, and combine into a data frame
pea_type <- gl(4,1,4, c("yellow_smooth","yellow_dent","green_smooth","green_dent"))
pea_data <- data.frame(pea_type, pea_count)
## Many frequency test functions need the data formatted as a "table," so we need to reformat
pea_table <- xtabs(pea_count ~ pea_type, data=pea_data)
## Before the test, let's evaluate our 20% of expected frequencies > 5 assumption.
## We can do this by running the chi-square test and pulling out just the expected counts vector
chisq.test(pea_table, p=c(9/16, 3/16, 3/16, 1/16), correct=F)$exp
## It looks like all 4 expected counts are greater than 5, so we will proceed.
chisq.test(pea_table, p=c(9/16, 3/16, 3/16, 1/16), correct=F)
cars
mtcars
data()
swiss
esoph
InsectSprays
HairEyeColor
OrchardSprays
class(HairEyeColor)
HairEyeColor[1]
HairEyeColor$1
HairEyeColor
HairEyeColor[[1]]
HairEyeColor[1:4,1:4]
HairEyeColor[,,1]
HairEyeColor[,,2]
library(DescTools)
install.packages("DescTools")
library(DescTools)
hair_eye_females <- HairEyeColor[,,2]
GTest(hair_eye_females)
class(hair_eye_females)
chisq.test(hair_eye_females, correct=F)$exp
1/16
(0.5/0.5)/(0.5/0.5)
(0.6/0.5)/(0.5/0.5)
(0.6/0.4)/(0.5/0.5)
pea_table
pea_data
hair_eye_females
class(hair_eye_females)
table(160, 39, 48, 11)
table(c(160, 39, 48, 11)
)
pea_table
matrix(c(20, 80, 2, 98))
matrix(c(20, 80, 2, 98), ncol=2)
matrix(c(20, 80, 2, 98), ncol=2, byrow=TRUE)
flips <- matrix(c(20, 80, 2, 98), ncol=2, byrow=TRUE)
colnames(flips) <- c("tails","heads")
rownames(flips) <- c("tail_biased","fair")
flips <- as.table(flips)
flips
flips <- matrix(c(60, 40, 50, 50), ncol=2, byrow=TRUE)
colnames(flips) <- c("tails","heads")
rownames(flips) <- c("tail_biased","fair")
flips <- as.table(flips)
flips
flips[1,1]
(flips[1,1]+0.5)*(flips[2,2]+0.5)/(flips[1,2]+0.5)*(flips[2,1]+0.5)
((flips[1,1]+0.5)*(flips[2,2]+0.5))/((flips[1,2]+0.5)*(flips[2,1]+0.5))
((flips[1,1])*(flips[2,2]))/((flips[1,2])*(flips[2,1]))
male_cm <- rnorm(100, 165, 1)
female_cm <- rnorm(100, 152.5, 1)
heights <- (c(male_cm,female_cm))
sexes <- c(rep("male", 100), rep("female", 100))
height_data <- data.frame(heights, sexes)
height_data
class(height_data$sexes)
anova(aov(height_data$heights~height_data$sexes))
